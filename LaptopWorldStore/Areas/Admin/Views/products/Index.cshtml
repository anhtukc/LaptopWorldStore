@model IPagedList<LaptopWorldStore.Models.product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

}
@using PagedList;
@using PagedList.Mvc;

<h4 class="page-title">Sản phẩm</h4>

<div class="main-content" ng-controller="adminproduct">
    <div class="function-place">
        <select ng-model="product.category_id">
            <option value="laptop">Laptop</option>
            <option value="ssd">ssd</option>
            <option value="ram">ram</option>
        </select>
        <a ng-click="RedicrecToCreatePage()" class="btn fas fa-plus">Thêm mới</a>
    </div>
    <div class="table-function-place">
        @using (Html.BeginForm("Index", "products", FormMethod.Get))
        {

            @Html.TextBox("SearchString") <input class="btn search-btn" type="submit" value="Tìm kiếm" />

        }
    </div>
    <table id="dynamic-table" class="table table-hover table-striped">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().category.category_name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().provider.provider_name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().product_name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().picture)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().quantity)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().flag)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.category.category_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.provider.provider_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.product_name)
                    </td>
                    <td class="col-lg-2">
                        <img src="@Url.Content("~/Content/images/product/" + item.picture)" />
                    </td>
                    <td>
                        @string.Format("{0:#,###,000}", item.price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.quantity)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.flag)
                    </td>
                    <td>
                        @Html.ActionLink(" ", "Edit", new { id = item.product_id }, new { @Class = "text-primary far fa-edit table-button" })
                        @Html.ActionLink(" ", "Details", new { id = item.product_id }, new { @Class = "gray fas fa-info-circle table-button" })
                        <a class="text-danger far fa-trash-alt table-button" ng-click="DeleteProduct('@item.product_id')"></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", "products", new { page, searchString = Request.QueryString["searchString"] }),
                                                                                   new PagedListRenderOptions
                                                                                        {
                                                                                      ContainerDivClasses = new string[] { "page-item" }
                                                                                   })
</div>
<script src="~/Content/js/admin-product.js"></script>